<?xml version="1.0"?>
<language id="yang" _name="YANG" version="2.0" _section="Others"><metadata><property name="mimetypes">application/yang</property><property name="globs">*.yang</property><property name="line-comment-start">//</property><property name="block-comment-start">/*</property><property name="block-comment-end">*/</property></metadata><styles><style id="comment" _name="Comment" map-to="def:comment"/><style id="doc-comment" _name="Documentation comment" map-to="def:doc-comment"/><style id="doc-stmt" _name="Documentation statement" map-to="def:doc-comment-element"/><style id="string" _name="String" map-to="def:string"/><style id="number" _name="Number" map-to="def:number"/><style id="keyword1" _name="Keyword 1" map-to="def:keyword"/><style id="keyword2" _name="Keyword 2" map-to="def:statement"/><style id="operator" _name="Operator" map-to="def:operator"/><style id="type" _name="Data Type" map-to="def:type"/><style id="special" _name="Special" map-to="def:special-constant"/><style id="error" _name="Error" map-to="def:error"/><style id="mark" _name="Debug mark" map-to="def:underlined"/></styles><definitions><define-regex id="identifier-base" extended="true">[\w_][-\w_\.0-9]*</define-regex><define-regex id="identifier" extended="true">['"]?\b\%{identifier-base}\b['"]?</define-regex><define-regex id="identifier-with-ns" extended="true">\b['"]?(\%{identifier-base}:)?\%{identifier-base}['"]?\b</define-regex><define-regex id="qualified-identifier" extended="true">\b['"]?\%{identifier-base}:\%{identifier-base}['"]?\b</define-regex><define-regex id="date" extended="true">\b[0-9]{4}-[01][0-9]-[0-3][0-9]\b</define-regex><define-regex id="extension" extended="true">\%{qualified-identifier}</define-regex><context id="extensions"><start extended="true">\%{extension}</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword2"/><context id="extensions-argument"><start>\s+</start><end>(?=;|{)</end></context><context id="extensions-substatements"><start>{</start><end>(?=;|})</end><include><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="string"><include><context id="single-quoted-string" style-ref="string"><start>'</start><end>'</end><include><context ref="def:in-comment"/></include></context><context id="double-quoted-string" style-ref="string"><start>"</start><end>(?&lt;!\\)"</end><include><context ref="def:in-comment"/></include></context><context id="unquoted-string" style-ref="string"><match extended="true">[^'";{}+\s]+(\s+[^+;{])?</match><include><context sub-pattern="1" style-ref="error"/></include></context><context id="concat-string" style-ref="operator"><match>\+</match></context><context ref="def:c-like-comment"/><context ref="def:c-like-comment-multiline"/><context ref="def:c-like-close-comment-outside-comment"/><context ref="wserror"/></include></context><context id="types" style-ref="type"><keyword>(u)?int(8|16|32|64)</keyword><keyword>decimal64</keyword><keyword>string</keyword><keyword>boolean</keyword><keyword>enumeration</keyword><keyword>bits</keyword><keyword>binary</keyword><keyword>leafref</keyword><keyword>identityref</keyword><keyword>empty</keyword><keyword>union</keyword><keyword>instance-identifier</keyword></context><context id="boolean" style-ref="special"><keyword>false</keyword><keyword>true</keyword></context><context id="wserror" style-ref="error"><match>\s+$</match></context><context id="stmt-error" style-ref="error"><match extended="true">\%{identifier-with-ns}</match></context><context id="common"><include><context ref="def:c-like-comment"/><context ref="def:c-like-comment-multiline"/><context ref="def:c-like-close-comment-outside-comment"/><context ref="stmt-error"/><context ref="wserror"/></include></context><context id="module" once-only="true"><start extended="true">\b(module|submodule)\s+(\%{identifier})</start><end>}</end><include><context sub-pattern="1" where="start" style-ref="keyword1"/><context sub-pattern="2" where="start" style-ref="special"/><context ref="yang-version"/><context ref="namespace"/><context ref="prefix"/><context ref="import"/><context ref="include"/><context ref="revision"/><context ref="belongs-to"/><context ref="typedef"/><context ref="anyxml"/><context ref="augment"/><context ref="choice"/><context ref="container"/><context ref="deviation"/><context ref="extension"/><context ref="feature"/><context ref="grouping"/><context ref="identity"/><context ref="leaf-list"/><context ref="leaf"/><context ref="list"/><context ref="notification"/><context ref="rpc"/><context ref="typedef"/><context ref="uses"/><context ref="module-doc"/><context ref="extensions"/><context ref="common"/></include></context><context id="yang-version" once-only="true"><start extended="true">\byang-version\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword2"/><context id="yang-version-argument" style-ref="number"><start extended="true">1</start><end>(?=;|{)</end><include><context ref="common"/></include></context><context id="yang-version-substatements"><start>{</start><end>(?=})</end><include><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="namespace" once-only="true"><start extended="true">\bnamespace\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword2"/><context id="namespace-argument"><start>\s+</start><end>(?=;|{)</end><include><context ref="string"/></include></context><context id="namespace-substatements"><start>{</start><end>(?=})</end><include><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="prefix" once-only="true"><start extended="true">\bprefix\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword2"/><context id="prefix-argument" style-ref="special"><start extended="true">\%{identifier}</start><end>(?=;|{)</end><include><context ref="common"/></include></context><context id="prefix-substatements"><start>{</start><end>(?=})</end><include><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="revision-date" once-only="true"><start extended="true">\brevision-date\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword2"/><context id="revision-date-argument" style-ref="number"><start extended="true">\%{date}</start><end>(?=;|{)</end><include><context ref="common"/></include></context><context id="revision-date-substatements"><start>{</start><end>(?=})</end><include><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="import"><start extended="true">\bimport\b</start><end>}</end><include><context sub-pattern="0" where="start" style-ref="keyword1"/><context id="import-argument" style-ref="special"><start extended="true">\%{identifier}</start><end>(?=;|{)</end><include><context ref="common"/></include></context><context id="import-substatements"><start>{</start><end>(?=})</end><include><context ref="prefix"/><context ref="revision-date"/><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="include"><start extended="true">\binclude\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword1"/><context id="include-argument" style-ref="special"><start extended="true">\%{identifier}</start><end>(?=;|{)</end><include><context ref="common"/></include></context><context id="include-substatements"><start>{</start><end>(?=})</end><include><context ref="revision-date"/><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="revision"><start extended="true">\brevision\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword2"/><context id="revision-argument" style-ref="number"><start extended="true">\%{date}</start><end>(?=;|{)</end><include><context ref="common"/></include></context><context id="revision-substatements"><start>{</start><end>(?=})</end><include><context ref="doc"/><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="belongs-to" once-only="true"><start extended="true">\bbelongs-to\b</start><end>}</end><include><context sub-pattern="0" where="start" style-ref="keyword1"/><context id="belongs-to-argument" style-ref="special"><start extended="true">\%{identifier}</start><end>(?=;|{)</end><include><context ref="common"/></include></context><context id="belongs-to-substatements"><start>{</start><end>(?=})</end><include><context ref="prefix"/><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="doc"><start extended="true">\b(description|reference|status)\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="doc-stmt"/><context id="doc-argument" style-ref="doc-comment"><start>\s+</start><end>(?=;|{)</end><include><context ref="string"/></include></context><context id="doc-substatements"><start>{</start><end>(?=})</end><include><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="module-doc"><start extended="true">\b(description|contact|organization|reference)\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="doc-stmt"/><context id="module-doc-argument" style-ref="doc-comment"><start>\s+</start><end>(?=;|{)</end><include><context ref="string"/></include></context><context id="module-doc-substatements"><start>{</start><end>(?=})</end><include><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="units" once-only="true"><start extended="true">\bunits\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="doc-stmt"/><context id="units-argument" style-ref="doc-comment"><start>\s+</start><end>(?=;|{)</end><include><context ref="string"/></include></context><context id="units-substatements"><start>{</start><end>(?=})</end><include><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="error-msg"><start extended="true">\b(error-message|error-app-tag)\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword2"/><context id="error-msg-argument"><start>\s+</start><end>(?=;|{)</end><include><context ref="string"/></include></context><context id="error-msg-substatements"><start>{</start><end>(?=})</end><include><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="type-common"><include><context ref="type"/><context ref="units"/><context ref="default"/></include></context><context id="default" once-only="true"><start extended="true">\bdefault\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword2"/><context id="default-argument"><start>\s+</start><end>(?=;|{)</end><include><context ref="string"/></include></context><context id="default-substatements"><start>{</start><end>(?=})</end><include><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="typedef"><start extended="true">\btypedef\b</start><end>}</end><include><context sub-pattern="0" where="start" style-ref="keyword1"/><context id="typedef-argument" style-ref="special"><start extended="true">\%{identifier}</start><end>(?=;|{)</end><include><context ref="common"/></include></context><context id="typedef-substatements"><start>{</start><end>(?=})</end><include><context ref="type-common"/><context ref="doc"/><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="type"><start extended="true">\btype\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword2"/><context id="type-argument"><start>\s+</start><end>(?=;|{)</end><include><context ref="types"/><context id="type-argument-match" style-ref="special"><match extended="true">\%{identifier-with-ns}</match></context><context ref="types"/><context id="type-custom-name" style-ref="special"><match extended="true">\%{identifier-with-ns}</match></context><context ref="common"/></include></context><context id="type-substatements"><start>{</start><end>(?=})</end><include><context ref="type"/><context ref="bit"/><context ref="enum"/><context ref="other-type-properties"/><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="other-type-properties"><start extended="true">\b(base|length|path|pattern|range|require-instance)\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword2"/><context id="other-type-properties-argument"><start>\s+</start><end>(?=;|{)</end><include><context ref="string"/></include></context><context id="other-type-properties-substatements"><start>{</start><end>(?=})</end><include><context ref="error-msg"/><context ref="doc"/><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="bit"><start extended="true">\bbit\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword2"/><context id="bit-argument" style-ref="special"><start extended="true">\%{identifier}</start><end>(?=;|{)</end><include><context ref="common"/></include></context><context id="bit-substatements"><start>{</start><end>(?=})</end><include><context ref="position"/><context ref="doc"/><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="position"><start extended="true">\bposition\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword2"/><context id="position-argument" style-ref="number"><start extended="true">\d+</start><end>(?=;|{)</end><include><context ref="common"/></include></context><context id="position-substatements"><start>{</start><end>(?=})</end><include><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="enum"><start extended="true">\benum\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword2"/><context id="enum-argument" style-ref="special"><start extended="true">\%{identifier}</start><end>(?=;|{)</end><include><context ref="common"/></include></context><context id="enum-substatements"><start>{</start><end>(?=})</end><include><context ref="value"/><context ref="doc"/><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="value"><start extended="true">\bvalue\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword2"/><context id="value-argument" style-ref="number"><start extended="true">\d+</start><end>(?=;|{)</end><include><context ref="common"/></include></context><context id="value-substatements"><start>{</start><end>(?=})</end><include><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="data-node-common"><include><context ref="config"/><context ref="if-feature"/><context ref="when"/><context ref="doc"/></include></context><context id="data-nodes"><include><context ref="anyxml"/><context ref="container"/><context ref="leaf-list"/><context ref="leaf"/><context ref="list"/></include></context><context id="container"><start extended="true">\bcontainer\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword1"/><context id="container-argument" style-ref="special"><start extended="true">\%{identifier}</start><end>(?=;|{)</end><include><context ref="common"/></include></context><context id="container-substatements"><start>{</start><end>(?=})</end><include><context ref="choice"/><context ref="grouping"/><context ref="must"/><context ref="presence"/><context ref="typedef"/><context ref="uses"/><context ref="data-nodes"/><context ref="data-node-common"/><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="leaf"><start extended="true">\bleaf\b</start><end>}</end><include><context sub-pattern="0" where="start" style-ref="keyword1"/><context id="leaf-argument" style-ref="special"><start extended="true">\%{identifier}</start><end>(?=;|{)</end><include><context ref="common"/></include></context><context id="leaf-substatements"><start>{</start><end>(?=})</end><include><context ref="mandatory"/><context ref="must"/><context ref="type-common"/><context ref="data-node-common"/><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="leaf-list"><start extended="true">\bleaf-list\b</start><end>}</end><include><context sub-pattern="0" where="start" style-ref="keyword1"/><context id="leaf-list-argument" style-ref="special"><start extended="true">\%{identifier}</start><end>(?=;|{)</end><include><context ref="common"/></include></context><context id="leaf-list-substatements"><start>{</start><end>(?=})</end><include><context ref="min-max-elements"/><context ref="must"/><context ref="ordered-by"/><context ref="type-common"/><context ref="data-node-common"/><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="list"><start extended="true">\blist\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword1"/><context id="list-argument" style-ref="special"><start extended="true">\%{identifier}</start><end>(?=;|{)</end><include><context ref="common"/></include></context><context id="list-substatements"><start>{</start><end>(?=})</end><include><context ref="choice"/><context ref="grouping"/><context ref="key"/><context ref="min-max-elements"/><context ref="must"/><context ref="ordered-by"/><context ref="typedef"/><context ref="unique"/><context ref="uses"/><context ref="data-nodes"/><context ref="data-node-common"/><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="choice"><start extended="true">\bchoice\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword1"/><context id="choice-argument" style-ref="special"><start extended="true">\%{identifier}</start><end>(?=;|{)</end><include><context ref="common"/></include></context><context id="choice-substatements"><start>{</start><end>(?=})</end><include><context ref="case"/><context ref="default"/><context ref="mandatory"/><context ref="data-nodes"/><context ref="data-node-common"/><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="case"><start extended="true">\bcase\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword1"/><context id="case-argument" style-ref="special"><start extended="true">\%{identifier}</start><end>(?=;|{)</end><include><context ref="common"/></include></context><context id="case-substatements"><start>{</start><end>(?=})</end><include><context ref="choice"/><context ref="uses"/><context ref="data-nodes"/><context ref="data-node-common"/><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="anyxml"><start extended="true">\banyxml\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword1"/><context id="anyxml-argument" style-ref="special"><start extended="true">\%{identifier}</start><end>(?=;|{)</end><include><context ref="common"/></include></context><context id="anyxml-substatements"><start>{</start><end>(?=})</end><include><context ref="mandatory"/><context ref="must"/><context ref="data-node-common"/><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="grouping"><start extended="true">\bgrouping\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword1"/><context id="grouping-argument" style-ref="special"><start extended="true">\%{identifier}</start><end>(?=;|{)</end><include><context ref="common"/></include></context><context id="grouping-substatements"><start>{</start><end>(?=})</end><include><context ref="choice"/><context ref="grouping"/><context ref="typedef"/><context ref="uses"/><context ref="data-nodes"/><context ref="doc"/><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="uses"><start extended="true">\buses\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword1"/><context id="uses-argument" style-ref="special"><start extended="true">\%{identifier-with-ns}</start><end>(?=;|{)</end><include><context ref="common"/></include></context><context id="uses-substatements"><start>{</start><end>(?=})</end><include><context ref="augment"/><context ref="refine"/><context ref="if-feature"/><context ref="when"/><context ref="doc"/><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="rpc"><start extended="true">\brpc\b</start><end>}</end><include><context sub-pattern="0" where="start" style-ref="keyword1"/><context id="rpc-argument" style-ref="special"><start extended="true">\%{identifier}</start><end>(?=;|{)</end><include><context ref="common"/></include></context><context id="rpc-substatements"><start>{</start><end>(?=})</end><include><context ref="grouping"/><context ref="if-feature"/><context ref="input-output"/><context ref="typedef"/><context ref="doc"/><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="input-output"><start extended="true">\b(input|output)\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword1"/><context id="input-output-substatements"><start>{</start><end>(?=})</end><include><context ref="choice"/><context ref="grouping"/><context ref="typedef"/><context ref="uses"/><context ref="data-nodes"/><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="notification"><start extended="true">\bnotification\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword1"/><context id="notification-argument" style-ref="special"><start extended="true">\%{identifier}</start><end>(?=;|{)</end><include><context ref="common"/></include></context><context id="notification-substatements"><start>{</start><end>(?=})</end><include><context ref="choice"/><context ref="grouping"/><context ref="if-feature"/><context ref="typedef"/><context ref="uses"/><context ref="data-nodes"/><context ref="doc"/><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="augment"><start extended="true">\baugment\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword1"/><context id="augment-argument"><start>\s+</start><end>(?=;|{)</end><include><context ref="string"/></include></context><context id="augment-substatements"><start>{</start><end>(?=})</end><include><context ref="case"/><context ref="choice"/><context ref="grouping"/><context ref="if-feature"/><context ref="uses"/><context ref="when"/><context ref="data-nodes"/><context ref="doc"/><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="must"><start extended="true">\bmust\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword2"/><context id="must-argument"><start>\s+</start><end>(?=;|{)</end><include><context ref="string"/></include></context><context id="must-substatements"><start>{</start><end>(?=})</end><include><context ref="error-msg"/><context ref="doc"/><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="presence"><start extended="true">\bpresence\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword2"/><context id="presence-argument"><start>\s+</start><end>(?=;|{)</end><include><context ref="string"/></include></context><context id="presence-substatements"><start>{</start><end>(?=})</end><include><context ref="error-msg"/><context ref="doc"/><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="mandatory"><start extended="true">\bmandatory\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword2"/><context id="mandatory-argument"><start>\s+</start><end>(?=;|{)</end><include><context ref="boolean"/></include></context><context id="mandatory-substatements"><start>{</start><end>(?=})</end><include><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="min-max-elements"><start extended="true">\b(m(in|ax)-elements)\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword2"/><context id="min-max-elements-argument" style-ref="number"><start extended="true">(\d+)|unbounded</start><end>(?=;|{)</end><include><context ref="common"/></include></context><context id="min-max-elements-substatements"><start>{</start><end>(?=})</end><include><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="ordered-by"><start extended="true">\bordered-by\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword2"/><context id="ordered-by-argument" style-ref="special"><start extended="true">system|user</start><end>(?=;|{)</end><include><context ref="common"/></include></context><context id="ordered-by-substatements"><start>{</start><end>(?=})</end><include><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="key"><start extended="true">\bkey\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword2"/><context id="key-argument"><start>\s+</start><end>(?=;|{)</end><include><context ref="string"/></include></context><context id="key-substatements"><start>{</start><end>(?=})</end><include><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="unique"><start extended="true">\bunique\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword2"/><context id="unique-argument"><start>\s+</start><end>(?=;|{)</end><include><context ref="string"/></include></context><context id="unique-substatements"><start>{</start><end>(?=})</end><include><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="refine"><start extended="true">\brefine\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword2"/><context id="refine-argument"><start>\s+</start><end>(?=;|{)</end><include><context ref="string"/></include></context><context id="refine-substatements"><start>{</start><end>(?=})</end><include><context ref="config"/><context ref="mandatory"/><context ref="min-max-elements"/><context ref="must"/><context ref="doc"/><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="identity"><start extended="true">\bidentity\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword1"/><context id="identity-argument" style-ref="special"><start extended="true">\%{identifier}</start><end>(?=;|{)</end><include><context ref="common"/></include></context><context id="identity-substatements"><start>{</start><end>(?=})</end><include><context ref="base"/><context ref="doc"/><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="base"><start extended="true">\bbase\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword2"/><context id="base-argument" style-ref="special"><start extended="true">\%{identifier-with-ns}</start><end>(?=;|{)</end><include><context ref="common"/></include></context><context id="base-substatements"><start>{</start><end>(?=})</end><include><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="extension"><start extended="true">\bextension\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword1"/><context id="extension-argument" style-ref="special"><start extended="true">\%{identifier}</start><end>(?=;|{)</end><include><context ref="common"/></include></context><context id="extension-substatements"><start>{</start><end>(?=})</end><include><context ref="argument"/><context ref="doc"/><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="argument"><start extended="true">\bargument\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword2"/><context id="argument-argument"><start>\s+</start><end>(?=;|{)</end><include><context ref="string"/></include></context><context id="argument-substatements"><start>{</start><end>(?=})</end><include><context ref="yin-element"/><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="yin-element"><start extended="true">\byin-element\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword2"/><context id="yin-element-argument"><start>\s+</start><end>(?=;|{)</end><include><context ref="boolean"/></include></context><context id="yin-element-substatements"><start>{</start><end>(?=})</end><include><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="feature"><start extended="true">\bfeature\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword1"/><context id="feature-argument" style-ref="special"><start extended="true">\%{identifier}</start><end>(?=;|{)</end><include><context ref="common"/></include></context><context id="feature-substatements"><start>{</start><end>(?=})</end><include><context ref="if-feature"/><context ref="doc"/><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="if-feature"><start extended="true">\bif-feature\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword2"/><context id="if-feature-argument" style-ref="special"><start extended="true">\%{identifier-with-ns}</start><end>(?=;|{)</end><include><context ref="common"/></include></context><context id="if-feature-substatements"><start>{</start><end>(?=})</end><include><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="deviation"><start extended="true">\bdeviation\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword1"/><context id="deviation-argument"><start>\s+</start><end>(?=;|{)</end><include><context ref="string"/></include></context><context id="deviation-substatements"><start>{</start><end>(?=})</end><include><context ref="deviate"/><context ref="doc"/><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="deviate"><start extended="true">\bdeviate\b</start><end>}</end><include><context sub-pattern="0" where="start" style-ref="keyword1"/><context id="deviate-argument" style-ref="special"><start extended="true">(not-supported|add|replace|delete)</start><end>(?=;|{)</end><include><context ref="common"/></include></context><context id="deviate-substatements"><start>{</start><end>(?=})</end><include><context ref="config"/><context ref="mandatory"/><context ref="min-max-elements"/><context ref="must"/><context ref="type-common"/><context ref="unique"/><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="config"><start extended="true">\bconfig\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword2"/><context id="config-argument"><start>\s+</start><end>(?=;|{)</end><include><context ref="boolean"/></include></context><context id="config-substatements"><start>{</start><end>(?=})</end><include><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="when"><start extended="true">\bwhen\b</start><end>;|}</end><include><context sub-pattern="0" where="start" style-ref="keyword2"/><context id="when-argument"><start>\s+</start><end>(?=;|{)</end><include><context ref="string"/></include></context><context id="when-substatements"><start>{</start><end>(?=})</end><include><context ref="extensions"/><context ref="common"/></include></context><context ref="common"/></include></context><context id="yang" class="no-spell-check"><include><context ref="def:c-like-comment"/><context ref="def:c-like-comment-multiline"/><context ref="def:c-like-close-comment-outside-comment"/><context ref="module"/><context ref="stmt-error"/><context ref="wserror"/></include></context></definitions></language>
