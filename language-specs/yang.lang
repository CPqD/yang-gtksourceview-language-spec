<?xml version="1.0" encoding="UTF-8"?>
<!--

 This file is part of GtkSourceView

 Authors: Marco Barisione, Emanuele Aina
 Copyright (C) 2005-2007 Marco Barisione <barisione@gmail.com>
 Copyright (C) 2005-2007 Emanuele Aina

 GtkSourceView is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation; either
 version 2.1 of the License, or (at your option) any later version.

 GtkSourceView is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

-->
<language id="yang" _name="YANG" version="2.0" _section="Others">
  <metadata>
    <property name="mimetypes">application/yang</property>
    <property name="globs">*.yang</property>
    <property name="line-comment-start">//</property>
    <property name="block-comment-start">/*</property>
    <property name="block-comment-end">*/</property>
  </metadata>

  <styles>
    <style id="comment"           _name="Comment"               map-to="def:comment"/>
    <style id="doc-comment"       _name="Documentation comment" map-to="def:doc-comment"/>
    <style id="doc-stmt"          _name="Documentation statement" map-to="def:doc-comment-element"/>
    <style id="string"            _name="String"                map-to="def:string"/>
    <style id="keyword1"          _name="Keyword 1"             map-to="def:keyword"/>
    <style id="keyword2"          _name="Keyword 2"             map-to="def:statement"/>
    <style id="operator"          _name="Operator"              map-to="def:operator"/>
    <style id="type"              _name="Data Type"             map-to="def:type"/>
    <style id="special"           _name="Special"               map-to="def:special-constant"/>
    <style id="error"             _name="Error"                 map-to="def:error"/>
    <style id="mark"              _name="Debug mark"            map-to="def:underlined"/>
  </styles>

  <definitions>

    <!--regexs-->
    <define-regex id="identifier-base" extended="true">\b[\w_][-\w_\.0-9]*\b</define-regex>
    <define-regex id="identifier" extended="true">\b['"]?[\w_][-\w_\.0-9]*['"]?\b</define-regex>
    <define-regex id="identifier-with-ns" extended="true">\b['"]?(\%{identifier-base}:)?\%{identifier-base}['"]?\b</define-regex>
    <define-regex id="qualified-identifier" extended="true">\b['"]?\%{identifier-base}:\%{identifier-base}['"]?\b</define-regex>

    <!-- Keywords -->
    <context id="keywords1" style-ref="keyword1">
        <keyword>anyxml</keyword>
        <keyword>augment</keyword>
        <keyword>case</keyword>
        <keyword>choice</keyword>
        <keyword>container</keyword>
        <keyword>extension</keyword>
        <keyword>deviate</keyword>
        <keyword>feature</keyword>
        <keyword>grouping</keyword>
        <keyword>identity</keyword>
        <keyword>import</keyword>
        <keyword>include</keyword>
        <keyword>input</keyword>
        <keyword>leaf</keyword>
        <keyword>leaf-list</keyword>
        <keyword>list</keyword>
        <keyword>module</keyword>
        <keyword>notification</keyword>
        <keyword>output</keyword>
        <keyword>rpc</keyword>
        <keyword>submodule</keyword>
        <keyword>typedef</keyword>
        <keyword>uses</keyword>
    </context>

    <context id="keywords2" style-ref="keyword2">
        <keyword>argument</keyword>
        <keyword>base</keyword>
        <keyword>belongs-to</keyword>
        <keyword>bit</keyword>
        <keyword>config</keyword>
        <keyword>default</keyword>
        <keyword>enum</keyword>
        <keyword>error-app-tag</keyword>
        <keyword>error-message</keyword>
        <keyword>deviation</keyword>
        <keyword>fraction-digits</keyword>
        <keyword>if-feature</keyword>
        <keyword>key</keyword>
        <keyword>length</keyword>
        <keyword>mandatory</keyword>
        <keyword>max-elements</keyword>
        <keyword>min-elements</keyword>
        <keyword>must</keyword>
        <keyword>namespace</keyword>
        <keyword>ordered-by</keyword>
        <keyword>path</keyword>
        <keyword>pattern</keyword>
        <keyword>position</keyword>
        <keyword>prefix</keyword>
        <keyword>presence</keyword>
        <keyword>range</keyword>
        <keyword>refine</keyword>
        <keyword>require-instance</keyword>
        <keyword>revision</keyword>
        <keyword>revision-date</keyword>
        <keyword>status</keyword>
        <keyword>type</keyword>
        <keyword>unique</keyword>
        <keyword>value</keyword>
        <keyword>when</keyword>
        <keyword>yang-version</keyword>
        <keyword>yin-element</keyword>
    </context>

    <context id="types" style-ref="type">
        <keyword>(u)?int(8|16|32|64)</keyword>
        <keyword>decimal64</keyword>
        <keyword>string</keyword>
        <keyword>boolean</keyword>
        <keyword>enumeration</keyword>
        <keyword>bits</keyword>
        <keyword>binary</keyword>
        <keyword>leafref</keyword>
        <keyword>identityref</keyword>
        <keyword>empty</keyword>
        <keyword>union</keyword>
        <keyword>instance-identifier</keyword>
    </context>

    <!-- Statements -->

    <!-- Extensions -->
    <context id="extensions">
        <start extended="true">\b(\%{qualified-identifier})(\s+\%{identifier})?\s*{?</start><!--TODO string-->
        <end>;|}</end>
        <include>
            <context sub-pattern="1" where="start" style-ref="keyword2"/>
            <context ref="common"/>
        </include>
    </context>

    <!-- description and other documentation statements -->
    <context id="doc" style-ref="doc-comment">
        <start>\b(description|contact|organization|reference|units)\b</start><end>;</end>
        <include>
            <context sub-pattern="0" where="start" style-ref="doc-stmt"/>
            <context ref="def:in-comment"/>
        </include>
    </context>

    <!-- module, submodule -->
    <context id="module" once-only="true">
        <start extended="true">\b(module|submodule)\s+(\%{identifier})\s*{</start>
        <end>}</end>
        <include>
            <context sub-pattern="1" where="start" style-ref="keyword1"/>
            <context sub-pattern="2" where="start" style-ref="special"/>
            <context id="yang-version" once-only="true" style-ref="keyword2">
                <match>\byang-version\s+1\s*;</match>
            </context>
            <context id="namespace" once-only="true">
                <start>\bnamespace\b</start><end>;</end>
                <include>
                    <context sub-pattern="0" where="start" style-ref="keyword2"/>
                    <context ref="string"/>
                </include>
            </context>
            <context ref="prefix"/>
            <context ref="common"/>
        </include>
    </context>

    <!-- prefix -->
    <context id="prefix" once-only="true">
        <match extended="true">\b(prefix)\s+(\%{identifier})\s*;</match>
        <include>
            <context sub-pattern="1" style-ref="keyword2"/>
            <context sub-pattern="2" style-ref="special"/>
        </include>
    </context>

    <!-- Parameter contexts -->
    <context id="string">
        <include>
            <context id="single-quoted-string" style-ref="string">
                <start>'</start><end>'</end>
            </context>
            <context id="double-quoted-string" style-ref="string">
                <start>"</start><end>[^\\]"</end>
            </context>
            <context id="unquoted-string" style-ref="string">
                <match extended="true">[^'";{}+\s]+(\s+[^+;{])?</match>
                <include>
                    <context sub-pattern="1" style-ref="error"/>
                </include>
            </context>
            <context id="concat-string" style-ref="operator">
                <match>\+</match>
            </context>
        </include>
    </context>

    <!-- Other contexts -->
    <context id="wserror" style-ref="error">
        <match>\s+$</match>
    </context>

    <context id="stmt-error" style-ref="error">
        <match extended="true">\%{identifier-with-ns}</match>
    </context>

    <context id="common">
        <include>
            <context ref="def:c-like-comment"/>
            <context ref="def:c-like-comment-multiline"/>
            <context ref="def:c-like-close-comment-outside-comment"/>
            <context ref="doc"/>
            <context ref="extensions"/>
            <context ref="stmt-error"/>
            <context ref="wserror"/>
        </include>
    </context>

    <!-- Main context -->
    <context id="yang" class="no-spell-check">
        <include>
            <context ref="def:c-like-comment"/>
            <context ref="def:c-like-comment-multiline"/>
            <context ref="def:c-like-close-comment-outside-comment"/>
            <context ref="module"/>
            <context ref="stmt-error"/>
            <context ref="wserror"/>
        </include>
    </context>

  </definitions>
</language>
